(()=>{async function f(){try{console.log("API: Loading configuration from server...");let r=await fetch("/api/config");if(!r.ok)throw new Error(`Config API returned ${r.status}: ${r.statusText}`);let e=await r.json();return console.log("API: Configuration loaded successfully"),e}catch(r){throw console.error("API: Failed to load configuration:",r),r}}async function c(r){try{console.log("API: Sending content to local printer...");let e=await fetch("/api/print-local",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:r})});if(!e.ok){let t=await e.text();throw new Error(`Print failed: ${t}`)}console.log("API: Content sent to local printer successfully")}catch(e){throw console.error("API: Failed to print local content:",e),e}}async function l(r,e){try{console.log(`API: Sending content to MQTT printer on topic: ${e}`);let t=await fetch("/api/print-mqtt",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:r,topic:e})});if(!t.ok){let o=await t.text();throw new Error(`MQTT print failed: ${o}`)}console.log("API: Content sent to MQTT printer successfully")}catch(t){throw console.error("API: Failed to print MQTT content:",t),t}}async function m(r){try{console.log(`API: Executing quick action: ${r}`);let e=await fetch(`/api/${r}`,{method:"GET"});if(!e.ok){let o=await e.text();throw new Error(`Quick action '${r}' failed: ${o}`)}let t=await e.json();return console.log(`API: Quick action '${r}' completed successfully`),t}catch(e){throw console.error(`API: Failed to execute quick action '${r}':`,e),e}}async function u(r,e="local-direct"){try{console.log("API: Generating user message content...");let t=new URLSearchParams({message:r});e!=="local-direct"&&t.set("target",e);let o=await fetch(`/api/user-message?${t}`,{method:"GET"});if(!o.ok)throw new Error(`HTTP ${o.status}: ${o.statusText}`);let i=await o.json();return console.log("API: User message content generated successfully"),i}catch(t){throw console.error("API: Failed to generate user message content:",t),t}}async function p(){try{console.log("API: Loading memos from server...");let r=await fetch("/api/memos");if(!r.ok)throw new Error(`Memos API returned ${r.status}: ${r.statusText}`);let e=await r.json();return console.log("API: Memos loaded successfully"),e}catch(r){throw console.error("API: Failed to load memos:",r),r}}function g(){return{error:null,loaded:!1,initialized:!1,data:{},message:"",selectedPrinter:"local-direct",submitting:!1,buttonTextOverride:null,printers:[],localPrinterName:"Unknown",overlayVisible:!1,overlayPrinterData:null,overlayPrinterName:"",overlayPrinterType:"mqtt",settingsStashed:!1,toasts:[],activeQuickAction:null,memoModalVisible:!1,memos:[],memosLoading:!1,memosLoaded:!1,printing:!1,get maxChars(){var e,t;return!this.loaded||!((t=(e=this.data.config)==null?void 0:e.device)!=null&&t.maxCharacters)?384:this.data.config.device.maxCharacters},get charCount(){return this.message.length},get charCountText(){let e=this.charCount,t=this.maxChars;if(e>t){let o=e-t;return`${e}/${t} characters (${o} over limit)`}return`${e}/${t} characters`},get charCountClass(){let e=this.charCount,t=this.maxChars,o=e/t;return e>t?"text-red-600 dark:text-red-400 font-semibold":o>=.9?"text-yellow-700 dark:text-yellow-300 font-medium":"text-gray-500 dark:text-gray-400"},get canSubmit(){return this.message.trim().length>0&&this.charCount<=this.maxChars&&!this.isLoading},get isConfigReady(){var e,t;return this.loaded&&!this.error&&((t=(e=this.data.config)==null?void 0:e.device)==null?void 0:t.maxCharacters)},async loadData(){var e,t;if(this.initialized){console.log("\u{1F4CB} Index: Already initialized, skipping");return}this.initialized=!0,this.loaded=!1,this.error=null,this.checkForSettingsSuccess();try{await this.loadConfig(),this.initializeLocalPrinter(),((t=(e=this.data.config)==null?void 0:e.mqtt)==null?void 0:t.enabled)===!0&&this.initializeRemotePrinterDiscovery(),this.setupEventListeners(),this.loaded=!0}catch(o){console.error("\u{1F4CB} Index: Config loading failed:",o),this.error=o.message}},async loadConfig(){var e,t,o,i,n;try{if(this.data.config=await f(),((t=(e=this.data.config)==null?void 0:e.device)==null?void 0:t.printer_name)===void 0)throw new Error("Printer name configuration is missing from server");if(((i=(o=this.data.config)==null?void 0:o.device)==null?void 0:i.maxCharacters)===void 0)throw new Error("Maximum characters validation configuration is missing from server");if(((n=this.data.config)==null?void 0:n.device)===void 0)throw new Error("Device configuration is missing from server");return this.localPrinterName=this.data.config.device.printer_name,await this.loadMemosFromAPI(),this.error=null,this.data.config}catch(a){throw console.error("\u{1F4CB} Index: Failed to load config:",a),this.error=a.message,a}},initializeLocalPrinter(){this.updatePrinterList()},initializeRemotePrinterDiscovery(){this.setupSSEConnection()},updatePrinterList(e=[]){this.printers=[{value:"local-direct",icon:"home",name:"Local direct",isLocal:!0,selected:this.selectedPrinter==="local-direct"}],e.forEach(t=>{let o=`scribe/${t.name}/print`;this.printers.push({value:o,icon:"megaphone",name:t.name,isLocal:!1,data:t,selected:this.selectedPrinter===o})})},setupEventListeners(){document.addEventListener("printersUpdated",e=>{this.updatePrinterList(e.detail.printers||[])})},selectPrinter(e){this.selectedPrinter=e,this.printers.forEach(t=>{t.selected=t.value===e})},async handleSubmit(e){if(e&&e.preventDefault(),!!this.canSubmit){this.submitting=!0;try{let t=this.message.trim(),o=await u(t,this.selectedPrinter);if(!o.content)throw new Error("Failed to generate message content");this.selectedPrinter==="local-direct"?await c(o.content):await l(o.content,this.selectedPrinter),this.triggerSubmitCelebration(),this.message=""}catch(t){console.error("Submit error:",t),this.showToast(`Error: ${t.message}`,"error")}finally{this.submitting=!1}}},async sendQuickAction(e){if(!this.activeQuickAction)try{this.activeQuickAction=e;let t=await m(e);if(!t.content){this.showToast("No content received from server","error");return}this.selectedPrinter==="local-direct"?await c(t.content):await l(t.content,this.selectedPrinter),this.triggerQuickActionCelebration(e)}catch(t){console.error("Error sending quick action:",t),this.showToast(`Network error: ${t.message}`,"error")}finally{setTimeout(()=>{this.activeQuickAction=null},2e3)}},handleTextareaKeydown(e){e.key==="Enter"&&!e.shiftKey&&(e.preventDefault(),this.canSubmit&&this.handleSubmit(e))},showLocalPrinterInfo(){var o;if(!((o=this.data.config)!=null&&o.device)){console.warn("Device configuration not loaded yet");return}let e=this.data.config.device,t={name:e.printer_name||e.owner,ip_address:e.ip_address,mdns:e.mdns,status:"online",firmware_version:e.firmware_version,timezone:e.timezone,last_power_on:e.boot_time};this.showPrinterOverlay(t,t.name,"local")},showPrinterOverlay(e,t,o="mqtt"){this.overlayPrinterData=e,this.overlayPrinterName=t,this.overlayPrinterType=o,this.overlayVisible=!0},closePrinterOverlay(){this.overlayVisible=!1,this.overlayPrinterData=null},get overlayData(){if(!this.overlayPrinterData)return null;let e=this.overlayPrinterData,t=this.overlayPrinterType,o=t==="mqtt"?`scribe/${this.overlayPrinterName}/print`:null,i=e.ip_address,n=e.mdns,a=e.firmware_version,w=t==="local"?window.getIcon("home","w-6 h-6"):window.getIcon("megaphone","w-6 h-6"),d="Not available";if(e.last_power_on)try{let s;if(typeof e.last_power_on=="string")s=new Date(e.last_power_on);else if(typeof e.last_power_on=="number"){let P=e.last_power_on<1e10?e.last_power_on*1e3:e.last_power_on;s=new Date(P)}else s=new Date(e.last_power_on);let v=new Date().getTime()-s.getTime(),x=this.formatTimeDifference(v),h=s.toLocaleString(void 0,{year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit",second:"2-digit",hour12:!1});d=`${x}${h?` (${h})`:""}`}catch(s){d="Invalid date"}let y=e.timezone;return{topic:o,ipAddress:i,mdns:n,firmwareVersion:a,printerIcon:w,lastPowerOnText:d,timezone:y}},async copyTopic(e){try{if(navigator.clipboard&&window.isSecureContext)await navigator.clipboard.writeText(e);else{let t=document.createElement("textarea");t.value=e,t.style.position="fixed",t.style.left="-999999px",t.style.top="-999999px",document.body.appendChild(t),t.focus(),t.select(),document.execCommand("copy"),document.body.removeChild(t)}}catch(t){console.error("Failed to copy:",t),this.showToast("Failed to copy topic","error")}},formatTimeDifference(e){let t=Math.floor(e/1e3),o=Math.floor(t/60),i=Math.floor(o/60),n=Math.floor(i/24);return n>0?`${n} day${n>1?"s":""} ago`:i>0?`about ${i} hour${i>1?"s":""} ago`:o>=2?`${o} mins ago`:o===1?"A minute ago":t>30?"30 seconds ago":"Just now"},showToast(e,t="info"){let o=Date.now(),i={id:o,message:e,type:t};this.toasts.push(i),setTimeout(()=>{this.removeToast(o)},4e3)},removeToast(e){this.toasts=this.toasts.filter(t=>t.id!==e)},checkForSettingsSuccess(){let e=new URLSearchParams(window.location.search);if(e.get("settings")==="stashed"){this.settingsStashed=!0,setTimeout(()=>{this.settingsStashed=!1},3e3);let t=window.location.pathname;window.history.replaceState({},document.title,t)}else if(e.get("settings_saved")==="true"){this.showToast("\u{1F4BE} Settings saved","success");let t=window.location.pathname;window.history.replaceState({},document.title,t)}},triggerQuickActionCelebration(e){if(typeof confetti!="undefined"){let t=document.querySelector(`[data-action="${e}"]`),o=t==null?void 0:t.getBoundingClientRect();switch(e){case"riddle":confetti({particleCount:100,spread:70,origin:o?{x:(o.left+o.width/2)/window.innerWidth,y:(o.top+o.height/2)/window.innerHeight}:{y:.6},colors:["#f59e0b","#eab308","#facc15","#fde047"],shapes:["square"]});break;case"joke":confetti({particleCount:150,spread:90,origin:o?{x:(o.left+o.width/2)/window.innerWidth,y:(o.top+o.height/2)/window.innerHeight}:{y:.6},colors:["#10b981","#34d399","#6ee7b7","#a7f3d0"],scalar:1.2});break;case"quote":confetti({particleCount:80,spread:45,origin:o?{x:(o.left+o.width/2)/window.innerWidth,y:(o.top+o.height/2)/window.innerHeight}:{y:.6},colors:["#8b5cf6","#a78bfa","#c4b5fd","#e0e7ff"],scalar:.8,shapes:["star"]});break;case"quiz":confetti({particleCount:120,spread:360,origin:o?{x:(o.left+o.width/2)/window.innerWidth,y:(o.top+o.height/2)/window.innerHeight}:{y:.6},colors:["#06b6d4","#67e8f9","#a5f3fc","#cffafe"],startVelocity:45,decay:.85});break;case"news":confetti({particleCount:120,spread:80,origin:o?{x:(o.left+o.width/2)/window.innerWidth,y:(o.top+o.height/2)/window.innerHeight}:{y:.6},colors:["#6b7280","#9ca3af","#d1d5db","#f3f4f6"],shapes:["square"],scalar:1.1,gravity:.9,drift:.05});break;case"memo":confetti({particleCount:100,spread:60,origin:o?{x:(o.left+o.width/2)/window.innerWidth,y:(o.top+o.height/2)/window.innerHeight}:{y:.6},colors:["#ec4899","#f472b6","#f9a8d4","#fce7f3"],scalar:.9,startVelocity:30});break;default:confetti({particleCount:100,spread:70,origin:o?{x:(o.left+o.width/2)/window.innerWidth,y:(o.top+o.height/2)/window.innerHeight}:{y:.6}})}}},triggerSubmitCelebration(){if(typeof confetti!="undefined"){let e=document.querySelector("#main-submit-btn"),t=e==null?void 0:e.getBoundingClientRect(),o=t?{x:(t.left+t.width/2)/window.innerWidth,y:(t.top+t.height/2)/window.innerHeight}:{y:.6};confetti({particleCount:200,spread:100,origin:o,colors:["#3b82f6","#60a5fa","#93c5fd","#dbeafe"],scalar:1.5})}},goToSettings(){window.location.href="/settings/"},async loadMemosFromAPI(){if(!this.memosLoaded)try{let e=await p();this.memos=[{id:1,content:e.memo1||""},{id:2,content:e.memo2||""},{id:3,content:e.memo3||""},{id:4,content:e.memo4||""}],this.memosLoaded=!0}catch(e){console.error("\u{1F4DD} Failed to load memos:",e),this.memos=[{id:1,content:""},{id:2,content:""},{id:3,content:""},{id:4,content:""}],this.memosLoaded=!0}},async showMemoModal(){this.memoModalVisible=!0,this.memosLoaded||await this.loadMemosFromAPI()},closeMemoModal(){this.memoModalVisible=!1},async printMemo(e){if(!this.printing)try{this.printing=!0;let t=await fetch(`/api/memo/${e}`);if(!t.ok)throw new Error(`Failed to get memo: ${t.status}`);let o=await t.json();if(!o.content)throw new Error("No memo content received");let i;this.selectedPrinter==="local-direct"?i=await c(o.content):i=await l(o.content,this.selectedPrinter),this.activeQuickAction="memo",this.closeMemoModal(),window.confetti&&confetti({colors:["#ec4899","#f472b6","#f9a8d4","#fce7f3"],startVelocity:30,spread:360,ticks:60,zIndex:0}),setTimeout(()=>{this.activeQuickAction=null},2e3)}catch(t){console.error("Failed to print memo:",t),this.showToast(`Failed to print memo: ${t.message}`,"error")}finally{this.printing=!1}},setupSSEConnection(){let e=null,t=()=>{e&&e.close(),e=new EventSource("/mqtt-printers"),e.addEventListener("printer-update",o=>{try{let i=JSON.parse(o.data);this.updatePrintersFromData(i)}catch(i){console.error("Error parsing remote printer (MQTT) update:",i)}}),e.addEventListener("system-status",o=>{try{let i=JSON.parse(o.data);this.showSystemNotification(i.status,i.message)}catch(i){console.error("Error parsing system status:",i)}}),e.onerror=o=>{console.error("SSE connection error for remote printer (MQTT) discovery:",o),setTimeout(()=>{t()},5e3)},e.onopen=o=>{}};t(),window.addEventListener("beforeunload",()=>{e&&e.close()})},updatePrintersFromData(e){if(e&&e.discovered_printers){this.printers=e.discovered_printers;let t=new CustomEvent("printersUpdated",{detail:{printers:e.discovered_printers}});document.dispatchEvent(t)}},showSystemNotification(e,t){if(!["connected","error","reconnecting"].includes(e))return;let o=document.createElement("div");switch(o.className=`notification notification-${e}`,o.style.cssText=`
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 10px 15px;
        border-radius: 4px;
        color: white;
        font-size: 14px;
        z-index: 10000;
        opacity: 0;
        transition: opacity 0.3s ease;
      `,e){case"connected":o.style.backgroundColor="#10b981";break;case"error":o.style.backgroundColor="#ef4444";break;case"reconnecting":o.style.backgroundColor="#f59e0b";break}o.textContent=t,document.body.appendChild(o),requestAnimationFrame(()=>{o.style.opacity="1"}),setTimeout(()=>{o.style.opacity="0",setTimeout(()=>{o.parentNode&&o.parentNode.removeChild(o)},300)},3e3)}}}document.addEventListener("alpine:init",()=>{let r=g();Alpine.store("index",r),console.log("\u2705 Index Store registered with ES6 modules")});})();
