{
    "name": "scribe-css-build",
    "version": "1.0.0",
    "description": "Build tools for Scribe ESP32-C3 Thermal Printer CSS",
    "private": true,
    "scripts": {
        "dev": "npm run build-static & npm run build-html & npm run build-css & npm run build-js & wait && npm run gzip-assets && npm run clean-uncompressed",
        "build": "npm run build-static & npm run build-html & npm run build-css-prod & npm run build-js-prod & wait && npm run gzip-assets && npm run clean-uncompressed",
        "gzip-assets": "node scripts/gzip-assets.js",
        "build-static": "cp -r src/data/images data/ && cp -r src/data/resources data/ && cp -r src/data/partials data/",
        "build-css": "npx @tailwindcss/cli --input ./src/data/css/app.css --output ./data/css/app.css",
        "build-css-prod": "npx @tailwindcss/cli --input ./src/data/css/app.css --output ./data/css/app.css --minify",
        "build-css-index": "npx @tailwindcss/cli --input ./src/css/index.css --output ./data/css/index.css",
        "build-css-index-prod": "npx @tailwindcss/cli --input ./src/css/index.css --output ./data/css/index.css --minify",
        "build-css-diagnostics": "npx @tailwindcss/cli --input ./src/css/diagnostics.css --output ./data/css/diagnostics.css",
        "build-css-diagnostics-prod": "npx @tailwindcss/cli --input ./src/css/diagnostics.css --output ./data/css/diagnostics.css --minify",
        "build-css-settings": "npx @tailwindcss/cli --input ./src/css/settings.css --output ./data/css/settings.css",
        "build-css-settings-prod": "npx @tailwindcss/cli --input ./src/css/settings.css --output ./data/css/settings.css --minify",
        "build-css-setup": "npx @tailwindcss/cli --input ./src/css/setup.css --output ./data/css/setup.css",
        "build-css-setup-prod": "npx @tailwindcss/cli --input ./src/css/setup.css --output ./data/css/setup.css --minify",
        "build-css-404": "npx @tailwindcss/cli --input ./src/css/404.css --output ./data/css/404.css",
        "build-css-404-prod": "npx @tailwindcss/cli --input ./src/css/404.css --output ./data/css/404.css --minify",
        "build-js": "npm run build-html && node esbuild.config.js all && npm run gzip-assets",
        "build-js-prod": "npm run build-html && node esbuild.config.js prod && npm run gzip-assets",
        "watch-css": "npx @tailwindcss/cli --input ./src/css/index.css --output ./data/css/index.css --watch & npx @tailwindcss/cli --input ./src/css/diagnostics.css --output ./data/css/diagnostics.css --watch & npx @tailwindcss/cli --input ./src/css/settings.css --output ./data/css/settings.css --watch & npx @tailwindcss/cli --input ./src/css/404.css --output ./data/css/404.css --watch",
        "watch-js": "npm run build-js && echo 'Use mock server restart (r) to pick up changes'",
        "watch": "npm run watch-css & npm run watch-js",
        "clean": "rm -rf data/css/*.min.css data/js/*.min.js",
        "build-html": "cp src/data/*.html data/ && cp src/data/*.png data/ && cp src/data/*.ico data/ && cp src/data/*.webmanifest data/ && cp src/data/*.svg data/ && cp -r src/data/settings data/",
        "clean-uncompressed": "find data -type f ! -name '*.gz' ! -name '*.png' ! -name '*.jpg' ! -name '*.ico' ! -name '*.webmanifest' ! -name '*.ndjson' ! -name '*.txt' ! -name '*.pem' -delete",
        "test": "pio test -e esp32c3-test",
        "firmware": "python3 scripts/build_firmware_release.py",
        "firmware:recover": "python3 scripts/build_firmware_release.py --recover",
        "firmware:esp32c3": "pio run -e esp32c3",
        "firmware:lolin32lite": "pio run -e lolin32lite"
    },
    "dependencies": {
        "@tailwindcss/cli": "^4.1.12",
        "alpinejs": "^3.14.9",
        "cors": "^2.8.5",
        "express": "^5.1.0",
        "tailwindcss": "^4.1.12"
    },
    "devDependencies": {
        "esbuild": "^0.25.9"
    }
}
